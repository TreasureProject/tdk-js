generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["tracing"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Partner within the Treasure ecosystem
model Project {
  // Primary key
  id String @id @default(cuid())

  // Fields
  slug         String   @unique
  name         String
  redirectUris String[] @map("redirect_uris")
  customAuth   Boolean  @default(false) @map("custom_auth")
  icon         String?
  cover        String?
  color        String?

  // Relations
  backendWallets BackendWallet[]
  callTargets    CallTarget[]

  // Computed
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("project")
}

// Project wallet that can be used to cover gas when desired
model BackendWallet {
  // Primary key
  id String @id @default(cuid())

  // Fields
  chainId Int
  address String

  // Relations
  projects Project[]

  // Computed
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([chainId, address])
  @@map("backend_wallet")
}

// Contracts that a project user's session should have write access to
model CallTarget {
  // Primary key
  id String @id @default(cuid())

  // Fields
  chainId Int
  address String

  // Relations
  projects Project[]

  // Computed
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([chainId, address])
  @@map("call_target")
}

model User {
  // Primary key
  id String @id @default(cuid())

  // Fields
  smartAccountAddress String    @unique @map("smart_account_address")
  email               String?   @unique
  treasureTag         String?   @unique @map("treasure_tag")
  lastLoginAt         DateTime? @map("last_login_at")

  // Computed
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("user")
}
